name: Deploy to Azure App Service

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AZURE_WEBAPP_NAME: Xhihangule-Property-Management    # Change this to your app name
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '18.x'
  AZURE_ACR_NAME: ''  # e.g., myregistry (set via repo/environment variables or directly here)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure login (OIDC)
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd client && npm ci
        cd ../server && npm ci

    - name: Build application
      run: |
        cd client && npm run build
        cd ../server && npm run build
      env:
        CI: false

    - name: Build Docker image
      run: |
        docker build -t ${{ env.AZURE_WEBAPP_NAME }}:${{ github.sha }} .
        docker tag ${{ env.AZURE_WEBAPP_NAME }}:${{ github.sha }} ${{ env.AZURE_WEBAPP_NAME }}:latest

    - name: Resolve ACR login server and login (OIDC)
      run: |
        if [ -z "$AZURE_ACR_NAME" ]; then echo "::error::AZURE_ACR_NAME is not set"; exit 1; fi
        LOGIN_SERVER=$(az acr show -n "$AZURE_ACR_NAME" --query loginServer -o tsv)
        if [ -z "$LOGIN_SERVER" ]; then echo "::error::Failed to resolve ACR login server"; exit 1; fi
        echo "LOGIN_SERVER=$LOGIN_SERVER" >> $GITHUB_ENV
        az acr login -n "$AZURE_ACR_NAME"

    - name: Push Docker image
      run: |
        docker tag ${{ env.AZURE_WEBAPP_NAME }}:${{ github.sha }} ${{ env.LOGIN_SERVER }}/${{ env.AZURE_WEBAPP_NAME }}:${{ github.sha }}
        docker tag ${{ env.AZURE_WEBAPP_NAME }}:latest ${{ env.LOGIN_SERVER }}/${{ env.AZURE_WEBAPP_NAME }}:latest
        docker push ${{ env.LOGIN_SERVER }}/${{ env.AZURE_WEBAPP_NAME }}:${{ github.sha }}
        docker push ${{ env.LOGIN_SERVER }}/${{ env.AZURE_WEBAPP_NAME }}:latest

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: ${{ env.LOGIN_SERVER }}/${{ env.AZURE_WEBAPP_NAME }}:${{ github.sha }}